{
  "common": {
    "loading": "Loading...",
    "notFound": "not found",
    "errorLoading": "Error loading",
    "error": "Error",
    "success": "Success",
    "cancel": "Cancel",
    "confirm": "Confirm",
    "save": "Save",
    "delete": "Delete",
    "edit": "Edit",
    "create": "Create",
    "search": "Search",
    "filter": "Filter",
    "name": "Name",
    "namespace": "Namespace",
    "status": "Status",
    "created": "Created",
    "actions": "Actions",
    "refresh": "Refresh",
    "ready": "Ready",
    "notReady": "Not Ready",
    "restart": "Restart",
    "scale": "Scale",
    "overview": "Overview",
    "available": "Available",
    "unavailable": "Unavailable",
    "language": "Language",
    "close": "Close",
    "remove": "Remove",
    "key": "Key",
    "value": "Value",
    "effect": "Effect",
    "noMessage": "No message",
    "labels": "Labels",
    "annotations": "Annotations",
    "services": "Services",
    "events": "Events",
    "yaml": "YAML",
    "logs": "Logs",
    "monitor": "Monitor",
    "terminal": "Terminal",
    "volumes": "Volumes",
    "pods": "Pods",
    "yes": "Yes",
    "no": "No",
    "default": "Default",  
    "provisioner": "Provisioner",
    "reclaimPolicy": "Reclaim Policy",
    "volumeBindingMode": "Volume Binding Mode",
    "allowVolumeExpansion": "Allow Volume Expansion",
    "parameters": "Parameters",
    "associatedPVC": "Associated PVCs",
    "pvcUsingThisStorageClass": "PVCs using this StorageClass",
    "noPVCsFound": "No PVCs found",
    "storageClassNotFound": "StorageClass not found",
    "capacity": "Capacity",
    "accessModes": "Access Modes",
    "basicInfo": "Basic Information",
    "labelsAndAnnotations": "Labels and Annotations",
    "configuration": "Configuration",
    "createdTime": "Created Time",
    "age": "Age",
    "owner": "Owner",
    "noOwner": "No owner",
    "resourceInformation": "{{resource}} Information",
    "loadingResourceDetails": "Loading {{resource}} details...",
    "errorLoadingResource": "Error loading {{resource}}",
    "resourceNotFound": "{{resource}} not found",
    "resourceDeleted": "{{resource}} deleted successfully",
    "deleteResourceError": "Failed to delete {{resource}}",
    "yamlSaved": "YAML saved successfully",
    "saveYamlError": "Failed to save YAML",
    "yamlConfiguration": "YAML Configuration",
    "related": "Related",
    "uid": "UID",
    "statistics": "Statistics",
    "noData": "No data available",
    "other": "Other",
    "timeUnits": {
      "days": "d",
      "hours": "h",
      "minutes": "m",
      "seconds": "s"
    }
  },
  "actions": {
    "refresh": "Refresh",
    "download": "Download",
    "edit": "Edit",
    "cancel": "Cancel",
    "delete": "Delete",
    "save": "Save",
    "updateSuccess": "Update successful",
    "deleteSuccess": "Delete successful"
  },
  "nav": {
    "cluster": "Cluster",
    "workloads": "Workloads",
    "openkruise": "OpenKruise",
    "tailscale": "Tailscale",
    "traefik": "Traefik",
    "systemUpgrade": "System Upgrade",
    "deployments": "Deployments",
    "statefulsets": "StatefulSets",
    "daemonsets": "DaemonSets",
    "jobs": "Jobs",
    "cronjobs": "CronJobs",
    "traffic": "Traffic",
    "services": "Services",
    "ingressclass": "Ingress Class",
    "ingresses": "Ingresses",
    "config": "Config",
    "configMaps": "ConfigMaps",
    "secrets": "Secrets",
    "storage": "Storage",
    "persistentVolumeClaims": "Persistent Volume Claims",
    "persistentVolumes": "Persistent Volumes",
    "storageClasses": "Storage Classes",
    "nodes": "Nodes",
    "namespaces": "Namespaces",
    "customResources": "Custom Resources",
    "customResourceDefinitions": "Custom Resource Definitions",
    "clonesets": "CloneSets",
    "advancedstatefulsets": "Advanced StatefulSets",
    "advanceddaemonsets": "Advanced DaemonSets",
    "broadcastjobs": "Broadcast Jobs",
    "advancedcronjobs": "Advanced CronJobs",
    "sidecarsets": "Sidecar Sets",
    "imagepulljobs": "Image Pull Jobs",
    "nodeimages": "Node Images",
    "connectors": "Connectors",
    "proxyclasses": "Proxy Classes",
    "proxygroups": "Proxy Groups",
    "ingressroutes": "Ingress Routes",
    "ingressroutetcps": "TCP Ingress Routes",
    "ingressrouteudps": "UDP Ingress Routes",
    "middlewares": "Middlewares",
    "middlewaretcps": "TCP Middlewares",
    "tlsoptions": "TLS Options",
    "tlsstores": "TLS Stores",
    "traefikservices": "Traefik Services",
    "serverstransports": "Servers Transports",
    "plans": "Upgrade Plans"
  },
  "overview": {
    "title": "Overview",
    "clusterStats": "Cluster Statistics",
    "recentEvents": "Recent Events",
    "resourceCharts": "Resource Charts",
    "failedToLoad": "Failed to load overview data",
    "unknownError": "Unknown error occurred"
  },
  "pods": {
    "title": "Pods",
    "restarts": "Restarts",
    "age": "Age",
    "node": "Node",
    "containerDetails": "Container Details"
  },
  "deployments": {
    "title": "Deployments",
    "available": "Available",
    "upToDate": "Up to Date",
    "description": "Manage stateless application replicas"
  },
  "services": {
    "title": "Services",
    "type": "Type",
    "clusterIP": "Cluster IP",
    "externalIP": "External IP",
    "ports": "Ports",
    "age": "Age"
  },
  "nodes": {
    "title": "Nodes",
    "list": "Node List",
    "role": "Role",
    "roles": "Roles",
    "controlPlane": "Control Plane",
    "version": "Version",
    "internalIP": "Internal IP",
    "externalIP": "External IP",
    "os": "OS",
    "kernelVersion": "Kernel Version",
    "containerRuntime": "Container Runtime",
    "cpuUsage": "CPU Usage",
    "cpuRequested": "CPU Requested",
    "memoryUsage": "Memory Usage",
    "memoryRequested": "Memory Requested",
    "podCount": "Pod Count",
    "age": "Age",
    "schedulable": "Schedulable",
    "unschedulable": "Unschedulable",
    "worker": "Worker",
    "loadingDetails": "Loading node details...",
    "noNodesFound": "No nodes found",
    "failedToLoadDetails": "Failed to load node details, falling back to basic information display",
    "cores": "cores",
    "unavailable": "N/A",
    "simpleMode": "Simple Mode",
    "detailsMode": "Details Mode",
    "simpleDescription": "Display basic node information",
    "detailsDescription": "Display detailed resource usage for all nodes",
    "autoRefresh": "Data refreshes automatically every 30 seconds",
    "statusOverview": "Status Overview",
    "nodeInformation": "Node Information",
    "resourceCapacity": "Resource Capacity",
    "nodeTaints": "Node Taints",
    "nodeConditions": "Node Conditions",
    "hostname": "Hostname",
    "kubeletVersion": "Kubelet Version",
    "osImage": "OS Image",
    "architecture": "Architecture",
    "kubeProxyVersion": "Kube Proxy Version",
    "podCIDR": "Pod CIDR",
    "cpuMemory": "CPU & Memory",
    "podsStorage": "Pods & Storage",
    "capacity": "Capacity",
    "allocatable": "Allocatable",
    "storage": "Storage",
    "schedulingDisabled": "SchedulingDisabled",
    "notAssigned": "Not assigned",
    "drain": "Drain",
    "drainNode": "Drain Node",
    "drainDescription": "Safely evict all pods from this node.",
    "forceDrain": "Force drain",
    "deleteLocalData": "Delete local data",
    "ignoreDaemonsets": "Ignore DaemonSets",
    "gracePeriod": "Grace Period (seconds)",
    "cordon": "Cordon",
    "uncordon": "Uncordon",
    "cordonNode": "Cordon Node",
    "cordonDescription": "Mark this node as unschedulable.",
    "taint": "Taint",
    "taintNode": "Taint Node",
    "taintDescription": "Add a taint to prevent pods from being scheduled.",
    "taintKey": "Key *",
    "taintValue": "Value",
    "taintEffect": "Effect",
    "taintKeyPlaceholder": "e.g., node.kubernetes.io/maintenance",
    "taintValuePlaceholder": "Optional value",
    "addTaint": "Add Taint",
    "noSchedule": "NoSchedule",
    "preferNoSchedule": "PreferNoSchedule",
    "noExecute": "NoExecute",
    "drainSuccess": "Node {{name}} drained successfully",
    "drainError": "Failed to drain node: {{error}}",
    "cordonSuccess": "Node {{name}} cordoned successfully",
    "cordonError": "Failed to cordon node: {{error}}",
    "uncordonSuccess": "Node {{name}} uncordoned successfully",
    "uncordonError": "Failed to uncordon node: {{error}}",
    "taintSuccess": "Node {{name}} tainted successfully",
    "taintError": "Failed to taint node: {{error}}",
    "taintKeyRequired": "Taint key is required",
    "untaintSuccess": "Node {{name}} untainted successfully",
    "untaintError": "Failed to untaint node: {{error}}",
    "yamlConfiguration": "YAML Configuration",
    "unknownError": "Unknown error",
    "memory": "Memory",
    "conditions": {
      "Ready": "Ready",
      "MemoryPressure": "Memory Pressure",
      "DiskPressure": "Disk Pressure",
      "PIDPressure": "PID Pressure",
      "NetworkUnavailable": "Network Unavailable",
      "OutOfDisk": "Out of Disk",
      "KubeletReady": "Kubelet Ready",
      "KubeletHasSufficientMemory": "Kubelet Has Sufficient Memory",
      "KubeletHasNoDiskPressure": "Kubelet Has No Disk Pressure",
      "KubeletHasSufficientPID": "Kubelet Has Sufficient PID"
    },
    "conditionMessages": {
      "kubeletHasSufficientMemoryAvailable": "kubelet has sufficient memory available",
      "kubeletHasNoDiskPressure": "kubelet has no disk pressure",
      "kubeletHasSufficientPIDAvailable": "kubelet has sufficient PID available",
      "kubeletIsPostingReadyStatus": "kubelet is posting ready status"
    }
  },
  "events": {
    "title": "Events",
    "type": "Type",
    "reason": "Reason",
    "object": "Object",
    "message": "Message",
    "firstSeen": "First Seen",
    "lastSeen": "Last Seen",
    "count": "Count"
  },
  "dialog": {
    "createResource": "Create Resource",
    "editResource": "Edit Resource",
    "deleteConfirmation": "Delete Confirmation",
    "deleteMessage": "Are you sure you want to delete this resource? This action cannot be undone.",
    "containerEdit": "Edit Container"
  },
  "status": {
    "running": "Running",
    "pending": "Pending",
    "succeeded": "Succeeded",
    "failed": "Failed",
    "unknown": "Unknown",
    "terminating": "Terminating",
    "crashLoopBackOff": "CrashLoopBackOff",
    "containerCreating": "ContainerCreating",
    "imagePullBackOff": "ImagePullBackOff"
  },
  "monitoring": {
    "cpuUsage": "CPU Usage",
    "memoryUsage": "Memory Usage",
    "networkUsage": "Network Usage",
    "diskUsage": "Disk Usage",
    "resourceUtilization": "Resource Utilization",
    "requests": "Requests",
    "limits": "Limits",
    "total": "Total"
  },
  "login": {
    "title": "Sign In",
    "subtitle": "Access your Kubernetes dashboard",
    "kubernetesDashboard": "Kubernetes Dashboard",
    "signIn": "Sign In",
    "username": "Username",
    "password": "Password",
    "enterUsername": "Enter your username",
    "enterPassword": "Enter your password",
    "signingIn": "Signing in...",
    "signInWithPassword": "Sign In with Password",
    "orContinueWith": "Or continue with",
    "signInWith": "Sign in with {{provider}}",
    "tryAgainDifferentAccount": "Try Again with Different Account",
    "tryAgainHint": "You can try logging in with a different account that has the required permissions.",
    "noLoginMethods": "No login methods configured",
    "configureAuth": "Please configure authentication providers in your environment",
    "footer": "© {{year}} Kite. Built for Kubernetes enthusiasts.",
    "documentation": "Documentation",
    "errors": {
      "accessDenied": "Access Denied",
      "authenticationFailed": "Authentication Failed",
      "profileAccessFailed": "Profile Access Failed",
      "sessionCreationFailed": "Session Creation Failed",
      "oauthCallbackFailed": "OAuth Callback Failed",
      "authenticationError": "Authentication Error",
      "insufficientPermissions": "Insufficient permissions to access this application.",
      "insufficientPermissionsUser": "Access denied for user \"{{user}}\". Please contact your administrator to verify your permissions.",
      "insufficientPermissionsDetails": "Your account does not have the required permissions to access this Kubernetes dashboard.",
      "tokenExchangeFailed": "Failed to complete authentication with {{provider}}.",
      "tokenExchangeDetails": "There was an issue exchanging the authorization code for an access token. Please try again.",
      "userInfoFailed": "Unable to retrieve your profile information from {{provider}}.",
      "userInfoDetails": "The authentication succeeded, but we could not access your profile. Please try again.",
      "jwtGenerationFailed": "Unable to create your authentication session.",
      "jwtGenerationFailedUser": "Failed to create a session for user \"{{user}}\".",
      "jwtGenerationDetails": "Please try logging in again. If the problem persists, contact support.",
      "callbackFailed": "The OAuth authentication process failed.",
      "callbackError": "An error occurred during authentication.",
      "generalError": "An unexpected error occurred during authentication.",
      "contactSupport": "Please try again or contact support if the issue persists.",
      "invalidCredentials": "Invalid username or password",
      "unknownError": "An unknown error occurred"
    }
  },
  "terminal": {
    "title": "Terminal",
    "connecting": "Connecting...",
    "connected": "Connected",
    "disconnected": "Disconnected",
    "reconnecting": "Reconnecting...",
    "connectionError": "Connection Error",
    "clear": "Clear",
    "settings": "Settings",
    "theme": "Theme",
    "fontSize": "Font Size",
    "fontFamily": "Font Family",
    "small": "Small",
    "medium": "Medium",
    "large": "Large",
    "searchPlaceholder": "Search...",
    "searchNext": "Next",
    "searchPrevious": "Previous",
    "searchClose": "Close Search",
    "noResults": "No Results",
    "findInTerminal": "Find in Terminal",
    "copy": "Copy",
    "paste": "Paste",
    "selectAll": "Select All",
    "webLinks": "Web Links",
    "fitToWindow": "Fit to Window",
    "defaultShell": "Default Shell",
    "customCommand": "Custom Command",
    "enterCommand": "Enter Command",
    "executeCommand": "Execute Command",
    "commandHistory": "Command History",
    "noCommandHistory": "No Command History",
    "clearHistory": "Clear History",
    "session": "Session",
    "newSession": "New Session",
    "closeSession": "Close Session",
    "sessionName": "Session Name",
    "renameSession": "Rename Session",
    "duplicateSession": "Duplicate Session",
    "sessionSettings": "Session Settings",
    "autoReconnect": "Auto Reconnect",
    "keepAlive": "Keep Alive",
    "encoding": "Encoding",
    "utf8": "UTF-8",
    "ascii": "ASCII",
    "latin1": "Latin1",
    "scrollback": "Scrollback Lines",
    "unlimited": "Unlimited",
    "lines": "Lines",
    "cursorBlink": "Cursor Blink",
    "cursorStyle": "Cursor Style",
    "block": "Block",
    "underline": "Underline",
    "bar": "Bar",
    "bell": "Bell",
    "visualBell": "Visual Bell",
    "audioBell": "Audio Bell",
    "noBell": "No Bell",
    "rightClick": "Right Click Menu",
    "selectToCopy": "Select to Copy",
    "pasteOnRightClick": "Paste on Right Click",
    "wordSeparators": "Word Separators",
    "macOptionIsMeta": "Mac Option is Meta",
    "macOptionClickForcesSelection": "Mac Option Click Forces Selection",
    "altClickMovesCursor": "Alt Click Moves Cursor",
    "rendererType": "Renderer Type",
    "canvas": "Canvas",
    "dom": "DOM",
    "experimentalCharAtlas": "Experimental Char Atlas",
    "experimentalBufferLineImpl": "Experimental Buffer Line Impl",
    "logLevel": "Log Level",
    "debug": "Debug",
    "info": "Info",
    "warn": "Warn",
    "error": "Error",
    "off": "Off"
  },
  "openkruise": {
    "title": "OpenKruise",
    "notInstalled": "OpenKruise is not installed in this cluster",
    "notInstalledDescription": "OpenKruise is a Kubernetes extension suite focused on automating cloud-native application management.",
    "installGuide": "Installation Guide",
    "learnMore": "Learn More",
    "version": "Version",
    "summary": "Summary",
    "availableWorkloads": "Available Workloads",
    "totalResources": "Total Resources",
    "totalInstances": "Total Instances",
    "supportedTypes": "Supported Types",
    "workloads": "Workloads",
    "management": "Management",
    "availability": "Availability",
    "categories": {
      "advancedWorkloads": "Advanced Workloads",
      "sidecarManagement": "Sidecar Container Management",
      "multiDomainManagement": "Multi-domain Management",
      "enhancedOperations": "Enhanced Operations",
      "applicationProtection": "Application Protection"
    },
    "clonesets": {
      "title": "CloneSets",
      "available": "Available",
      "upToDate": "Up to Date",
      "description": "Enhanced stateless workload with in-place update and flexible release strategies",
      "updateStrategy": "Update Strategy",
      "scaleStrategy": "Scale Strategy",
      "inPlaceUpdate": "In-place Update",
      "recreateUpdate": "Recreate Update",
      "partition": "Partition",
      "maxUnavailable": "Max Unavailable",
      "maxSurge": "Max Surge",
      "podsToDelete": "Pods to Delete",
      "disablePVCReuse": "Disable PVC Reuse",
      "volumeClaimTemplates": "Volume Claim Templates",
      "scaleCloneSet": "Scale CloneSet",
      "scaleDescription": "Adjust the number of replicas for this CloneSet.",
      "replicas": "Replicas",
      "restartCloneSet": "Restart CloneSet",
      "restartDescription": "This will restart all pods in the CloneSet by updating the CloneSet's template with a new restart annotation. This action cannot be undone.",
      "deleteSuccess": "CloneSet deleted successfully",
      "deleteError": "Failed to delete CloneSet",
      "scaleSuccess": "CloneSet scaled to {{replicas}} replicas",
      "scaleError": "Failed to scale CloneSet",
      "restartSuccess": "CloneSet restarted successfully",
      "restartError": "Failed to restart CloneSet",
      "yamlSaveSuccess": "YAML saved successfully",
      "yamlSaveError": "Failed to save YAML",
      "containerUpdateSuccess": "Container {{name}} updated successfully",
      "containerUpdateError": "Failed to update container",
      "statusOverview": "Status Overview",
      "readyReplicas": "Ready Replicas",
      "updatedReplicas": "Updated Replicas",
      "availableReplicas": "Available Replicas",
      "cloneSetInformation": "CloneSet Information",
      "created": "Created",
      "selector": "Selector",
      "containers": "Containers",
      "conditions": "Conditions",
      "yamlConfiguration": "YAML Configuration",
      "services": "Services"
    },
    "advancedstatefulsets": {
      "title": "Advanced StatefulSets",
      "description": "Enhanced stateful workload with in-place update and parallel release"
    },
    "advanceddaemonsets": {
      "title": "Advanced DaemonSets",
      "description": "Enhanced daemon set with in-place update and flexible release strategies",
      "yamlSaveSuccess": "AdvancedDaemonSet YAML saved successfully",
      "restartSuccess": "AdvancedDaemonSet restart initiated",
      "deleteSuccess": "AdvancedDaemonSet deleted successfully",
      "containerUpdateSuccess": "Container updated successfully",
      "loadingDetails": "Loading AdvancedDaemonSet details...",
      "errorLoading": "Error loading AdvancedDaemonSet:",
      "notFound": "AdvancedDaemonSet not found",
      "refresh": "Refresh",
      "restart": "Restart",
      "delete": "Delete",
      "status": "Status",
      "statusPending": "Pending",
      "statusAvailable": "Available",
      "statusInProgress": "In Progress",
      "readyReplicas": "Ready Replicas",
      "currentScheduled": "Current Scheduled",
      "desiredScheduled": "Desired Scheduled",
      "information": "AdvancedDaemonSet Information",
      "created": "Created",
      "strategy": "Strategy",
      "containers": "Containers",
      "configuration": "AdvancedDaemonSet Configuration",
      "restartDialogTitle": "Restart AdvancedDaemonSet",
      "restartDialogDescription": "This will restart all pods managed by this AdvancedDaemonSet. This action cannot be undone.",
      "restartDialogCancel": "Cancel",
      "deleteDialogTitle": "Delete AdvancedDaemonSet",
      "deleteDialogDescription": "Are you sure you want to delete this AdvancedDaemonSet? This action cannot be undone."
    },
    "broadcastjobs": {
      "title": "Broadcast Jobs",
      "description": "Job type that runs pods on every node in the cluster"
    },
    "advancedcronjobs": {
      "title": "Advanced CronJobs",
      "description": "Provides enhanced CronJob capabilities"
    },
    "sidecarsets": {
      "title": "Sidecar Sets",
      "description": "Manage application sidecar containers with in-place update support"
    },
    "uniteddeployments": {
      "title": "United Deployments",
      "description": "Manage multi-domain deployments"
    },
    "workloadspreads": {
      "title": "Workload Spreads",
      "description": "Constrain the spread of stateless workload pods"
    },
    "imagepulljobs": {
      "title": "Image Pull Jobs",
      "description": "Pre-pull images on nodes"
    },
    "containerrecreaterequests": {
      "title": "Container Recreate Requests",
      "description": "Restart containers in running pods"
    },
    "resourcedistributions": {
      "title": "Resource Distributions",
      "description": "Distribute resources across namespaces"
    },
    "persistentpodstates": {
      "title": "Persistent Pod States",
      "description": "Maintain pod state across restarts"
    },
    "podprobemarkers": {
      "title": "Pod Probe Markers",
      "description": "Customize pod readiness probes"
    },
    "nodeimages": {
      "title": "Node Images",
      "description": "Manage image pre-downloading on nodes"
    },
    "podunavailablebudgets": {
      "title": "Pod Unavailable Budgets",
      "description": "Protect pod availability in various disruption scenarios"
    }
  },
  "tailscale": {
    "title": "Tailscale",
    "description": "Tailscale is an open-source network solution that provides secure and reliable network connectivity.",
    "notInstalled": "Tailscale Operator is not installed in this cluster",
    "notInstalledDescription": "Tailscale Kubernetes Operator provides secure networking and connectivity solutions for Kubernetes clusters.",
    "installGuide": "Installation Guide",
    "learnMore": "Learn More",
    "version": "Version",
    "summary": "Summary",
    "availableWorkloads": "Available Workloads",
    "totalResources": "Total Resources",
    "totalInstances": "Total Instances",
    "supportedTypes": "Supported Types",
    "workloads": "Workloads",
    "management": "Management",
    "availability": "Availability",
    "categories": "Categories",
    "connectors": {
      "title": "Connectors",
      "description": "Manage subnet routers, exit nodes, and app connectors for secure network access",
      "list": "Connector List",
      "empty": "No connectors found",
      "type": "Type",
      "hostname": "Hostname",
      "routes": "Routes",
      "proxyClass": "Proxy Class",
      "tags": "Tags",
      "types": {
        "subnetRouter": "Subnet Router",
        "exitNode": "Exit Node",
        "appConnector": "App Connector",
        "unknown": "Unknown"
      },
      "status": {
        "ready": "Ready",
        "notReady": "Not Ready",
        "unknown": "Unknown"
      },
      "stats": {
        "total": "Total",
        "ready": "Ready",
        "subnetRouters": "Subnet Routers",
        "exitNodes": "Exit Nodes",
        "appConnectors": "App Connectors"
      }
    },
    "proxyclasses": {
      "title": "Proxy Classes",
      "description": "Define custom proxy configurations for Tailscale resources",
      "list": "Proxy Class List",
      "empty": "No proxy classes found",
      "features": "Features",
      "customLabels": "Custom Labels",
      "image": "Image",
      "resources": "Resources",
      "defaultImage": "Default",
      "featuresTypes": {
        "metrics": "Metrics",
        "resources": "Resources",
        "security": "Security",
        "nodeSelector": "Node Selector"
      },
      "stats": {
        "total": "Total",
        "withMetrics": "With Metrics",
        "withResources": "With Resources",
        "withSecurity": "With Security",
        "withNodeSelector": "With Node Selector"
      },
      "deleteSuccess": "ProxyClass deleted successfully",
      "deleteError": "Failed to delete ProxyClass",
      "yamlSaveSuccess": "YAML saved successfully",
      "yamlSaveError": "Failed to save YAML"
    },
    "proxygroups": {
      "title": "Proxy Groups",
      "description": "Manage high-availability proxy groups for enhanced reliability"
    }
  },
  "traefik": {
    "title": "Traefik",
    "description": "Traefik is a modern reverse proxy and load balancer that provides dynamic service discovery for containerized applications.",
    "notInstalled": "Traefik is not installed in this cluster",
    "notInstalledDescription": "Traefik is an open-source edge router that provides solutions for publishing, load balancing, and service discovery for your services.",
    "installGuide": "Installation Guide",
    "learnMore": "Learn More",
    "version": "Version",
    "summary": "Summary",
    "availableWorkloads": "Available Workloads",
    "totalResources": "Total Resources",
    "totalInstances": "Total Instances",
    "supportedTypes": "Supported Types",
    "workloads": "Workloads",
    "management": "Management",
    "availability": "Availability",
    "categories": "Categories",
    "installInstructions": "Please refer to the official documentation to install Traefik in your Kubernetes cluster.",
    "ingressroutes": {
      "title": "Ingress Routes",
      "description": "Manage HTTP/HTTPS routing rules",
      "list": "Ingress Route List",
      "empty": "No ingress routes found",
      "entryPoints": "Entry Points",
      "hosts": "Hosts",
      "paths": "Paths",
      "services": "Services",
      "middlewares": "Middlewares",
      "tls": "TLS"
    },
    "ingressroutetcps": {
      "title": "TCP Ingress Routes",
      "description": "Manage TCP routing rules",
      "list": "TCP Ingress Route List",
      "empty": "No TCP ingress routes found"
    },
    "ingressrouteudps": {
      "title": "UDP Ingress Routes",
      "description": "Manage UDP routing rules",
      "list": "UDP Ingress Route List",
      "empty": "No UDP ingress routes found"
    },
    "middlewares": {
      "title": "Middlewares",
      "description": "Define request/response processing rules",
      "list": "Middleware List",
      "empty": "No middlewares found",
      "type": "Type",
      "configuration": "Configuration"
    },
    "middlewaretcps": {
      "title": "TCP Middlewares",
      "description": "Define TCP processing rules",
      "list": "TCP Middleware List",
      "empty": "No TCP middlewares found"
    },
    "tlsoptions": {
      "title": "TLS Options",
      "description": "Define TLS configuration options",
      "list": "TLS Options List",
      "empty": "No TLS options found",
      "minVersion": "Min Version",
      "maxVersion": "Max Version",
      "cipherSuites": "Cipher Suites",
      "curvePreferences": "Curve Preferences"
    },
    "tlsstores": {
      "title": "TLS Stores",
      "description": "Define TLS certificate stores",
      "list": "TLS Store List",
      "empty": "No TLS stores found",
      "defaultCertificate": "Default Certificate"
    },
    "traefikservices": {
      "title": "Traefik Services",
      "description": "Define load balancing and service discovery",
      "list": "Traefik Service List",
      "empty": "No Traefik services found",
      "weighted": "Weighted",
      "mirroring": "Mirroring",
      "failover": "Failover"
    },
    "serverstransports": {
      "title": "Servers Transports",
      "description": "Define transport configuration for backend servers",
      "list": "Servers Transport List",
      "empty": "No servers transports found",
      "serverName": "Server Name",
      "insecureSkipVerify": "Skip Verify",
      "rootCAs": "Root CAs"
    }
  },
  "version": {
    "title": "Version Information",
    "current": "Current Version",
    "latest": "Latest Version",
    "loading": "Loading...",
    "unknown": "Unknown",
    "updateAvailable": "Update Available",
    "updateDescription": "New version {{latest}} is available, current version is {{current}}",
    "releaseDate": "Release Date: {{date}}",
    "viewRelease": "View Release Notes",
    "viewCommit": "View Commit",
    "checkForUpdates": "Check for Updates",
    "lastCheck": "Last Check: {{time}}"
  },
  "systemUpgrade": {
    "title": "System Upgrade Controller",
    "description": "System Upgrade Controller provides automated upgrade management and orchestration for Kubernetes nodes.",
    "notInstalled": "System Upgrade Controller not installed in cluster",
    "notInstalledDescription": "System Upgrade Controller is a controller for managing Kubernetes node upgrades.",
    "installInstructions": "Please refer to the official documentation to install System Upgrade Controller to your Kubernetes cluster.",
    "installGuide": "Installation Guide",
    "version": "Version",
    "categories": "Resource Categories",
    "summary": "Summary Statistics",
    "availableWorkloads": "Available Workloads",
    "totalInstances": "Total Instances",
    "supportedTypes": "Supported Types",
    "upgradeDevices": "Upgrade Plans",
    "upgradeDevicesDescription": "Manage and view system upgrade plans",
    "createPlan": "Create Plan",
    "deletePlan": "Delete Upgrade Plan",
    "deletePlanConfirm": "Are you sure you want to delete upgrade plan \"{{name}}\"? This action cannot be undone.",
    "planDetail": "Upgrade Plan Details",
    "searchPlans": "Search upgrade plans",
    "noPlans": "No upgrade plans",
    "noPlansDescription": "Create upgrade plans to start managing your Kubernetes node upgrades",
    "basicInfo": "Basic Information",
    "image": "Upgrade Image",
    "concurrency": "Concurrency",
    "nodeSelector": "Node Selector",
    "channel": "Channel",
    "labelsAnnotations": "Labels & Annotations",
    "statusInfo": "Status Information",
    "conditions": "Conditions",
    "tolerations": "Tolerations",
    "totalPlans": "Total Plans",
    "readyPlans": "Ready Plans",
    "executablePlans": "Executable Plans",
    "inProgress": "In Progress",
    "upgradeingNodes": "Upgrading Nodes",
    "drainEnabled": "Drain Enabled",
    "drainConfigured": "Drain Configured",
    "recentPlans": "Recent Plans",
    "viewAll": "View All",
    "viewPlans": "View Plans",
    "status": {
      "unknown": "Unknown",
      "pending": "Pending",
      "inProgress": "In Progress",
      "completed": "Completed",
      "failed": "Failed",
      "ready": "Ready",
      "notReady": "Not Ready"
    },
    "plans": {
      "title": "Upgrade Plans",
      "description": "Manage and view system upgrade plans",
      "detailDescription": "Upgrade plan details and configuration",
      "image": "Upgrade Image",
      "version": "Version",
      "concurrency": "Concurrency",
      "nodeSelector": "Node Selector",
      "serviceAccount": "Service Account",
      "applying": "Applying",
      "drainConfig": "Drain Configuration",
      "noNodeSelector": "No node selector configured",
      "notFound": "Upgrade plan not found",
      "deleteTitle": "Delete Upgrade Plan",
      "deleteDescription": "Are you sure you want to delete upgrade plan \"{{name}}\"? This action cannot be undone.",
      "deleteSuccess": "Upgrade plan deleted successfully",
      "deleteError": "Failed to delete upgrade plan",
      "yamlSaveSuccess": "YAML configuration saved successfully",
      "yamlSaveError": "Failed to save YAML configuration",
      "status": {
        "ready": "Ready",
        "notReady": "Not Ready",
        "unknown": "Unknown"
      }
    },
    "jobs": {
      "title": "Upgrade Jobs",
      "description": "View system upgrade job execution status and logs"
    }
  },
  "errors": {
    "loadFailed": "Load failed",
    "notFound": "Not found",
    "forbidden": "Permission denied",
    "serverError": "Server error",
    "operationFailed": "Operation failed: {{message}}",
    "unknownError": "Unknown error"
  },
  "validation": {
    "yamlRequired": "YAML content cannot be empty"
  }
}
